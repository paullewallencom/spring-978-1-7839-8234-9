
CREATE PROCEDURE CREATE_TASK(OUT v_newID INTEGER, IN v_name VARCHAR(200), IN v_STATUS VARCHAR(50), IN v_priority INTEGER, IN v_createdUserId INTEGER, IN v_createdDate DATE, IN v_assignedUserId INTEGER, IN v_comment VARCHAR(2000))
	
	MODIFIES SQL DATA
	
	BEGIN ATOMIC
		INSERT INTO TBL_TASK(NAME, STATUS, PRIORITY, CREATED_USER_ID, CREATED_DATE, ASSIGNEE_USER_ID, COMMENTS) VALUES(v_name, v_status, v_priority, v_createdUserId, v_createdDate, v_assignedUserId, v_comment);
		SET v_newID = IDENTITY();
	END;
	
/
--GRANT EXECUTE ON SPECIFIC ROUTINE CREATE_TASK to PUBLIC
COMMIT
/

CREATE PROCEDURE GET_TASKS_BY_STATUS(IN v_status VARCHAR(20))
	
	READS SQL DATA
	
	BEGIN ATOMIC
	
	DECLARE RESULT CURSOR WITH RETURN FOR SELECT ID, NAME, STATUS, PRIORITY, CREATED_USER_ID, CREATED_DATE, ASSIGNEE_USER_ID FROM TBL_TASK WHERE STATUS = v_status FOR READ ONLY;
	
	OPEN RESULT;
	
	END
/

CREATE PROCEDURE GET_TASKS_BY_STATUS_ASSIGNEE_ID(IN v_status VARCHAR(20), IN v_assignee_id INTEGER)
	
	READS SQL DATA
	
	BEGIN ATOMIC
	
	DECLARE RESULT CURSOR WITH RETURN FOR SELECT ID, NAME, STATUS, PRIORITY, CREATED_USER_ID, CREATED_DATE, ASSIGNEE_USER_ID FROM TBL_TASK WHERE STATUS = v_status AND ASSIGNEE_USER_ID = v_assignee_id FOR READ ONLY;
	
	OPEN RESULT;
	
	END
/

CREATE PROCEDURE GET_TASKS_BY_STATUS_ASSIGNEE_USERNAME(IN v_status VARCHAR(20), IN v_assignee_name VARCHAR(20))
	
	READS SQL DATA
	
	BEGIN ATOMIC
	
	DECLARE RESULT CURSOR WITH RETURN FOR SELECT ID, NAME, STATUS, PRIORITY, CREATED_USER_ID, CREATED_DATE, ASSIGNEE_USER_ID FROM TBL_TASK WHERE STATUS = v_status AND ASSIGNEE_USER_ID = (SELECT ID FROM TBL_USER WHERE USER_NAME = v_assignee_name) FOR READ ONLY;
	
	OPEN RESULT;
	
	END
	
/

CREATE PROCEDURE GET_TASKS_BY_ASSIGNEE_ID(v_assignee_id INTEGER)
	
	READS SQL DATA
	
	BEGIN ATOMIC
	
	DECLARE RESULT CURSOR WITH RETURN FOR SELECT ID, NAME, STATUS, PRIORITY, CREATED_USER_ID, CREATED_DATE, ASSIGNEE_USER_ID FROM TBL_TASK WHERE ASSIGNEE_USER_ID = v_assignee_id FOR READ ONLY;
	
	OPEN RESULT;
	
	END
	
/

CREATE PROCEDURE GET_TASKS_BY_ASSIGNEE_NAME(v_assignee_name VARCHAR(20))
	
	READS SQL DATA
	
	BEGIN ATOMIC
	
	DECLARE RESULT CURSOR WITH RETURN FOR SELECT ID, NAME, STATUS, PRIORITY, CREATED_USER_ID, CREATED_DATE, ASSIGNEE_USER_ID FROM TBL_TASK WHERE ASSIGNEE_USER_ID = (SELECT ID FROM TBL_USER WHERE USER_NAME = v_assignee_name) FOR READ ONLY;
	
	OPEN RESULT;
	
	END
	
/




CREATE FUNCTION GET_USER_ID (in_name VARCHAR(200))
RETURNS INTEGER READS SQL DATA 
SPECIFIC GET_USER_ID
BEGIN ATOMIC
  declare out_id INTEGER;
  select id into out_id from tbl_user where user_name = in_name;
  RETURN out_id;
END
/

GRANT EXECUTE ON SPECIFIC ROUTINE GET_USER_ID to PUBLIC

/